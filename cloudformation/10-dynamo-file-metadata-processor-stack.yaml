AWSTemplateFormatVersion: '2010-09-09'
Description: DynamoDb Lambda stream processor

Parameters:
  Environment:
    Type: String
  Project:
    Type: String
    Default: medisplain
  FunctionAIProcessConsumerName:
    Type: String
    Default: file-metadata-stream-processor.zip
  DynamoMetadataTableName:
    Type: String
    Default: user-file-metadata
  WebsocketEndpoint:
    Type: String
    Default: wss://x4rtfzardl.execute-api.eu-central-1.amazonaws.com/test/

Resources:
  DynamoStreamFileMetadataProcessorFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${AWS::StackName}-function-${Environment}"
      Handler: file_metadata_stream_processor.handler
      Role: !GetAtt DynamoStreamFileMetadataProcessorRole.Arn
      Runtime: python3.11
      Timeout: 10
      Code:
        S3Bucket:
          Fn::ImportValue:
            Fn::Sub: LambdaCodeBucket${Environment}
        S3Key: !Ref FunctionAIProcessConsumerName
      Environment:
        Variables:
          QUEUE_URL:
            Fn::ImportValue:
              Fn::Sub:  FileToAnalyzeQueueRef${Environment}
          TABLE_NAME: !Sub ${Project}-${DynamoMetadataTableName}-${Environment}
          WEBSOCKET_ENDPOINT: !Ref WebsocketEndpoint

  DynamoStreamFileMetadataProcessorRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: !Sub ${Project}-stream-to-sqs-${Environment}
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - sqs:SendMessage
                Resource:
                  Fn::ImportValue:
                    Fn::Sub: FileToAnalyzeQueueArn${Environment}
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
              - Effect: Allow
                Action:
                  - dynamodb:GetRecords
                  - dynamodb:GetShardIterator
                  - dynamodb:DescribeStream
                  - dynamodb:ListStreams
                  - dynamodb:GetItem
                Resource:
                  Fn::ImportValue:
                    Fn::Sub: UserFileMetadataTableStreamArn${Environment}
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                Resource:
                  Fn::ImportValue:
                    Fn::Sub: UserFileMetadataTableArn${Environment}
              - Effect: Allow
                Action:
                  - execute-api:ManageConnections
                Resource: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:x4rtfzardl/*/POST/@connections/*

  DynamoStreamMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      EventSourceArn:
        Fn::ImportValue:
          Fn::Sub: UserFileMetadataTableStreamArn${Environment}
      FunctionName: !Ref DynamoStreamFileMetadataProcessorFunction
      StartingPosition: LATEST
      BatchSize: 5
      Enabled: true